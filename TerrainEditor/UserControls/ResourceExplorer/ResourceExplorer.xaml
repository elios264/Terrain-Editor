<UserControl x:Class="TerrainEditor.UserControls.ResourceExplorer" x:Name="UserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TerrainEditor.UserControls"
            xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
            xmlns:pt="http://propertytools.org/wpf"
            xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
            xmlns:utilities="clr-namespace:TerrainEditor.Utilities"
            mc:Ignorable="d" 
            d:DesignHeight="150" d:DesignWidth="600" >
    
    <Grid DataContext="{Binding ElementName=UserControl}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <TreeView SelectedItemChanged="TreeViewOnSelectedFolderChanged" >
            <TreeView.Resources>
                <BitmapImage x:Key="FolderImage" UriSource="../../Resources/folder.ico" po:Freeze ="true" />
                <utilities:SelectManyConverter x:Key="SelectManyConverter"/>
                <RoutedCommand x:Key="Rename"  />
                <RoutedCommand x:Key="OpenExplorer"  />
            </TreeView.Resources>
            <TreeView.CommandBindings>
                <CommandBinding Command="New" Executed="OnNewFolder" />
                <CommandBinding Command="Refresh" Executed="OnRefreshFolder" />
                <CommandBinding Command="Delete" Executed="OnDeleteFolder" />
                <CommandBinding Command="{StaticResource Rename}" Executed="OnRenameFolder" />
                <CommandBinding Command="{StaticResource OpenExplorer}" Executed="OnOpenFolderInExplorer" />
            </TreeView.CommandBindings>
            <TreeView.InputBindings>
                <KeyBinding Key="F2" Command="{StaticResource Rename}"/>
            </TreeView.InputBindings>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Open in Explorer" Command="{StaticResource OpenExplorer}"/>
                    <Separator/>
                    <MenuItem Header="New" Command="New" />
                    <MenuItem Header="Rename" Command="{StaticResource Rename}" InputGestureText="F2" />
                    <MenuItem Header="Refresh" Command="Refresh" />
                    <Separator/>
                    <MenuItem Header="Delete" Command="Delete" />
                </ContextMenu>                
            </TreeView.ContextMenu>
            <TreeView.ItemsSource>
                <MultiBinding Converter="{StaticResource SelectManyConverter}" >
                    <Binding Path="RootDirectory" />
                </MultiBinding>
            </TreeView.ItemsSource>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type local:Directory}" ItemsSource="{Binding Directories}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource FolderImage}" Width="25" Height="25"/>
                        <pt:EditableTextBlock Text="{Binding Header}" VerticalAlignment="Center" IsEditing="{Binding IsEditing}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ResizeDirection="Columns" Focusable="False" />

        <ListBox Name="FileList" Grid.Column="2" SelectedItem="{Binding SelectedFile}" KeyboardNavigation.DirectionalNavigation="Cycle"
                 ItemsSource="{Binding CurrentFiles}" Tag="{Binding ElementName=UserControl}" SelectionMode="Extended"
                 TextSearch.TextPath="FileInfo.Name" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                 Padding="0,5" MouseUp="FileList_MouseUp">
            <ListBox.Resources>
                <BitmapImage po:Freeze="true" x:Key="DefaultFileIcon" UriSource="../../Resources/file.png"/>
                <RoutedCommand x:Key="Rename"  />
                <RoutedCommand x:Key="NewResource"  />
                <ContextMenu x:Key="ItemContextMenu" >
                    <MenuItem Header="Edit" Command="Open" />
                    <Separator/>
                    <MenuItem Header="Cut" Command="Cut" />
                    <MenuItem Header="Copy" Command="Copy" />
                    <Separator/>
                    <MenuItem Header="Rename" Command="{StaticResource Rename}" InputGestureText="F2" />
                    <MenuItem Header="Delete" Command="Delete" />
                </ContextMenu>

                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <EventSetter Event="Loaded" Handler="OnRenameTextBoxCreated"/>
                </Style>
                
            </ListBox.Resources>
            <ListBox.CommandBindings>
                <CommandBinding Command="Open" Executed="OnEditResource" />
                <CommandBinding Command="Cut" Executed="OnCutResource" />
                <CommandBinding Command="Copy" Executed="OnCopyResource" />
                <CommandBinding Command="Paste" Executed="OnPasteResource" />
                <CommandBinding Command="{StaticResource Rename}" Executed="OnRenameResource" />
                <CommandBinding Command="Delete" Executed="OnDeleteResource" />
                <CommandBinding Command="Refresh" Executed="RefreshResources" />
            </ListBox.CommandBindings>
            <ListBox.InputBindings>
                <KeyBinding Key="Enter" Command="Open"/>
                <KeyBinding Key="F2" Command="{StaticResource Rename}"/>
            </ListBox.InputBindings>
            <ListBox.ContextMenu>
                <ContextMenu DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.Tag}" >
                    <MenuItem Header="New" ItemsSource="{Binding Path=VisibleResourceInfoProviders}">
                        <MenuItem.CommandBindings>
                            <CommandBinding Command="{StaticResource NewResource}" Executed="OnNewResource"/>
                        </MenuItem.CommandBindings>
                        <MenuItem.Icon>
                            <Image Source="../../Resources/new.png" Width="20" Height="20"  />
                        </MenuItem.Icon>
                        <MenuItem.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:IResourceInfoProvider}">
                                <TextBlock >
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} [ {1} ]">
                                            <Binding Path="ResourceType.Name"/>
                                            <Binding Path="Extensions[0]"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="Command" Value="{StaticResource NewResource}"/>
                                <Setter Property="CommandParameter" Value="{Binding}"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Refresh" Command="Refresh" CommandTarget="{x:Reference FileList}" />
                    <MenuItem Header="Show all files" IsCheckable="True" IsChecked="{Binding Path=ShowAllResources}" />
                    <MenuItem Header="Paste" IsEnabled="True" Command="Paste" CommandTarget="{x:Reference FileList}" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" ItemWidth="60" MaxWidth="{Binding ElementName=FileList, Path=ActualWidth}" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type local:File}">
                    <Grid>
                        <Grid.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick" Command="Open" />
                        </Grid.InputBindings>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Image Grid.Row="0" Stretch="UniformToFill" MinHeight="55"
                               Source="{Binding Preview, TargetNullValue={StaticResource DefaultFileIcon}}" />
                        <Grid Grid.Row="1">
                            <pt:EditableTextBlock Name="Block" DockPanel.Dock="Bottom" 
                                                  Text="{Binding Name}"
                                                  TextWrapping="NoWrap" TextAlignment="Center"
                                                  TextTrimming="CharacterEllipsis" IsEditing="{Binding IsEditing}" />
                        </Grid>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={ RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                            <Setter TargetName="Block" Property="TextWrapping" Value="Wrap"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnPreviewDragResource" />
                    <EventSetter Event="MouseMove" Handler="OnTryDragResource" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>


    </Grid>
</UserControl>

